/**
 * CLI ÂõΩÈôÖÂåñ‰∏≠Ëã±ÊñáÊèêÁ§∫ËØ≠
 * Áî®Ê≥ïÔºöconst { MSG } = require('../i18n/messages');
 *      MSG[lang].KEY
 */
const MSG = {
  CN: {
    // ÁéØÂ¢ÉËÆæÁΩÆ
    HARVEST_ACCOUNT_ID: 'ËØ∑ËæìÂÖ•‰Ω†ÁöÑ Harvest Ë¥¶Âè∑ID',
    HARVEST_TOKEN: 'ËØ∑ËæìÂÖ•‰Ω†ÁöÑ Harvest API Token',
    USER_AGENT: 'ËØ∑ËæìÂÖ•Ëá™ÂÆö‰πâÊ†áËØÜ (ÊØîÂ¶Ç‰Ω†ÁöÑÈÇÆÁÆ±)',
    PROJECT_MAP: 'ËØ∑ËæìÂÖ•È°πÁõÆÂêçÂà∞IDÁöÑÊò†Â∞Ñ (Â¶Ç {"È°πÁõÆA":12345,"È°πÁõÆB":67890})',
    PROJECT_MAP_ERR: 'ÂøÖÈ°ªÊòØÂêàÊ≥ïJSONÔºåÂΩ¢Â¶Ç {"È°πÁõÆA":12345}',
    TASK_MAP: 'ËØ∑ËæìÂÖ•‰ªªÂä°ÂêçÂà∞IDÁöÑÊò†Â∞Ñ (Â¶Ç {"‰ªªÂä°A":11111,"‰ªªÂä°B":22222})',
    TASK_MAP_ERR: 'ÂøÖÈ°ªÊòØÂêàÊ≥ïJSONÔºåÂΩ¢Â¶Ç {"‰ªªÂä°A":11111}',
    CONFIRM: (key, val) => `‰Ω†ËæìÂÖ•ÁöÑ${key}‰∏∫Ôºö\n${val}\nÁ°ÆËÆ§Êó†ËØØÂêóÔºü`,
    ENV_SUCCESS: (userEnvPath) =>
      `Â∑≤ÊàêÂäüÂàõÂª∫ÈÖçÁΩÆÊñá‰ª∂: ${userEnvPath}„ÄÇ\nÂ∞ÜÁªßÁª≠ÊâßË°åÂêéÁª≠Êìç‰Ωú...\n`,
    ENV_PATCHED: '[CN] Â∑≤Ë°•ÂÖÖÈÖçÁΩÆ LANG Â≠óÊÆµ„ÄÇ\n',
    LANGUAGE_CHOICE: 'ËØ∑ÈÄâÊã©‰Ω†ÂÅèÂ•ΩÁöÑËØ≠Ë®ÄÔºö',
    SYSTEM_LANG_DETECTED: (osLocale) => `ÂΩìÂâçÊ£ÄÊµãÂà∞ÁöÑÁ≥ªÁªüËØ≠Ë®Ä: ${osLocale}`,
    // ËøêË°åÂÖ•Âè£‰∏é‰∏ªÊµÅÁ®ã
    CLI_DESC:
      '‰∏ÄÈîÆÂØºÂÖ•Êó•Êä•Âà∞HarvestÁöÑCLIÂ∑•ÂÖ∑ÔºåÈúÄÈÖçÁΩÆ.env Êàñ ~/.harvest-auto.env',
    FILE_PATH_ASK: 'ËØ∑ËæìÂÖ•Êó•Êä• JSON Êñá‰ª∂ÁöÑË∑ØÂæÑÔºàÂèØÊãñÂÖ•/Á≤òË¥¥ÂÆåÊï¥Ë∑ØÂæÑÔºâÔºö',
    FILE_NOT_FOUND: (p) =>
      `Êâæ‰∏çÂà∞Ê≠§Êñá‰ª∂ÔºàÂ§ÑÁêÜÂêéË∑ØÂæÑÔºö${p}ÔºâÔºåËØ∑Á°ÆËÆ§Ë∑ØÂæÑËæìÂÖ•Ê≠£Á°Æ„ÄÇ`,
    FILE_PATH_CONFIRM: (p) =>
      `‰Ω†ËÆæÁΩÆÁöÑÊó•Êä• JSON Ë∑ØÂæÑ‰∏∫Ôºö\n${p}\nÊòØÂê¶Á°ÆËÆ§Êó†ËØØÔºü`,
    READ_FAIL: 'ËØªÂèñ/Ëß£ÊûêÊó•Êä•Êñá‰ª∂Â§±Ë¥•:',
    NO_VALID_REPORT: 'Êó†ÊúâÊïàÊó•Êä•ÂÜÖÂÆπ',
    DRY_RUN: '[dry-run] Êú™ÂÆûÈôÖ‰∏äÊä•„ÄÇ',
    DRY_RUN_DESC: 'ÊºîÁªÉÊ®°ÂºèÔºåÂè™ËæìÂá∫ÊïàÊûúÔºå‰∏çËøõË°åÂÆûÈôÖ‰∏äÊä•',
    CANCEL: 'Â∑≤ÂèñÊ∂àÊìç‰Ωú„ÄÇ',
    EXIT_MID:
      '‚ö†Ô∏è Ê£ÄÊµãÂà∞‰Ω†Âú®‰∫§‰∫íËøáÁ®ã‰∏≠‰∏ªÂä®‰∏≠Êñ≠ÔºåÁ®ãÂ∫èÂ∑≤ÁªàÊ≠¢„ÄÇÂ¶ÇÈúÄÁªßÁª≠ÔºåËØ∑ÈáçÊñ∞ËøêË°åÂëΩ‰ª§„ÄÇ',
    SUBMIT_FINISH: '\nüéâ ÊâÄÊúâÂ∑•Êó∂Â∑≤ÊàêÂäüËá™Âä®Â°´Êä•ÂÆåÊØïÔºå‰ªªÂä°ÂÖ®ÈÉ®ÁªìÊùüÔºÅ',
    // ËØ≠Ë®ÄÈÄâÊã©
    LANG_ZH: 'ÁÆÄ‰Ωì‰∏≠Êñá (CN)',
    LANG_EN: 'English (EN)',
    // ‰∫§‰∫í
    IS_OK: 'Á°ÆËÆ§Êó†ËØØÂêóÔºü',
    HELP_DESC: 'Â±ïÁ§∫Â∏ÆÂä©‰ø°ÊÅØ',
    // ctrl+c
    SIGINT:
      '‚ö†Ô∏è Ê£ÄÊµãÂà∞‰Ω†‰ΩøÁî® Ctrl + C ‰∏ªÂä®‰∏≠Êñ≠ÔºåÁ®ãÂ∫èÂ∑≤ÁªàÊ≠¢„ÄÇÂ¶ÇÈúÄÁªßÁª≠ÔºåËØ∑ÈáçÊñ∞ËøêË°åÂëΩ‰ª§„ÄÇ',
    // Â°´Êä•ÊµÅÁ®ã
    SUBMIT_OK: (date, project, task, hours, notes) =>
      `‚úî Â°´Êä•ÊàêÂäü | ${date} | ${project} - ${task} | ${hours}h | ${notes}`,
    SUBMIT_FAIL: (date, project, task, hours, notes, err) =>
      `‚úó Â°´Êä•Â§±Ë¥• | ${date} | ${project} - ${task} | ${hours}h | ${notes}\n${err}`,
    SUBMIT_PROGRESS: (date, project, task, hours) =>
      `Â∑•Êó∂Â°´ÂÜô‰∏≠: ${date} | ${project} - ${task} - ${hours}h ...`,
    WARNING_HOURS_ITEMS: (date, dayTotal, arrLen, max, isExceed) =>
      isExceed
        ? `‚ö†Ô∏è Ë≠¶ÂëäÔºö${date} Â∑•Êó∂ÂàÜÈÖçÂºÇÂ∏∏ÔºàÊÄªÂ∑•Êó∂ ${dayTotal}ÔºåÊòéÁªÜÊï∞ ${arrLen}Ôºâ„ÄÇÂ∑≤Ëá™Âä®ÂÖúÂ∫ïÔºåÊúÄÂêé‰∏ÄÊù°Â∑•Êó∂Ë∂ÖÂá∫ÊúÄÂ§ßÂçïÊù°Â∑•Êó∂ ${max}ÔºåËØ∑ÂÖ≥Ê≥®ÊòéÁªÜÂêàÁêÜÊÄß„ÄÇ\nÂ¶ÇÈúÄ‰∏•Ê†ºÈôêÂà∂ÔºåËØ∑ÊâãÂä®Ë∞ÉÊï¥ËØ•Â§©ÊòéÁªÜÂÜÖÂÆπ„ÄÇ`
        : `‚ö†Ô∏è Ë≠¶ÂëäÔºö${date} Â∑•Êó∂ÂàÜÈÖçÂºÇÂ∏∏ÔºàÊÄªÂ∑•Êó∂ ${dayTotal}ÔºåÊòéÁªÜÊï∞ ${arrLen}Ôºâ„ÄÇÂ∑≤Ëá™Âä®ÂÖúÂ∫ïÔºå‰∏çÁ¨¶ÂêàÊ≠£Â∏∏ÂàÜÈÖçÂàÜÂ∏ÉÔºåËØ∑ÂÖ≥Ê≥®ËØ•Â§©ÊòéÁªÜ„ÄÇ`,
    PROJECT_MAP_INVALID:
      '\n[ÈÖçÁΩÆÈîôËØØ] PROJECT_MAP ÈÖçÁΩÆ‰∏çÊòØÂêàÊ≥ï JSONÔºåËØ∑ÁºñËæë ~/.harvest-auto.env ÊåâÂ¶Ç‰∏ãÊ†ºÂºèÔºö\n\nPROJECT_MAP={"È°πÁõÆA":12345,"È°πÁõÆB":67890}\n',
    TASK_MAP_INVALID:
      '\n[ÈÖçÁΩÆÈîôËØØ] TASK_MAP ÈÖçÁΩÆ‰∏çÊòØÂêàÊ≥ï JSONÔºåËØ∑ÁºñËæë ~/.harvest-auto.env ÊåâÂ¶Ç‰∏ãÊ†ºÂºèÔºö\n\nTASK_MAP={"‰ªªÂä°A":11111,"‰ªªÂä°B":22222}\n',
    // --- Êñ∞Â¢û: ÈÖçÁΩÆÊõ¥Êîπ‰∫§‰∫íÊèêÁ§∫ ---
    CHANGE_ENV_SELECT_FIELDS: 'ËØ∑ÈÄâÊã©‰Ω†Ë¶ÅÊõ¥ÊîπÁöÑÂ≠óÊÆµÔºàÂèØÂ§öÈÄâÔºâÔºö',
    CHANGE_ENV_SELECT_FIELDS_EN:
      'Select fields to change (multi-select is allowed):',
    CHANGE_ENV_FIELD_ALL: 'ÂÖ®ÈÉ®/ÊâÄÊúâÂ≠óÊÆµÔºà‰æùÊ¨°‰øÆÊîπÂÖ®ÈÉ®Â≠óÊÆµÔºâ',
    CHANGE_ENV_FIELD_ALL_EN: 'All fields (edit all one by one)',
    CHANGE_ENV_MUST_SELECT: 'ÂøÖÈ°ªÈÄâÊã©‰∏Ä‰∏™Â≠óÊÆµ',
    CHANGE_ENV_MUST_SELECT_EN: 'Select at least one',
    ONLY_SELECT_ALL_OR_SUBSET: 'ËØ∑ÈÄâÊã©‚ÄúÂÖ®ÈÉ®Â≠óÊÆµ‚ÄùÊàñËã•Âπ≤ÂÖ∑‰ΩìÂ≠óÊÆµÔºå‰∏çËÉΩÊ∑∑ÈÄâ',
    // for mode select
    CHANGE_ENV_CHOOSE_MODE: 'ËØ∑ÈÄâÊã©Êõ¥ÊîπÂÖ®ÈÉ®Â≠óÊÆµÔºåËøòÊòØÂè™Êõ¥ÊîπÊåáÂÆöÂ≠óÊÆµÔºü',
    CHANGE_ENV_CHOOSE_ALL: 'ÂÖ®ÈÉ®Â≠óÊÆµÔºà‰æùÊ¨°Êõ¥ÊîπÂÖ®ÈÉ®Ôºâ',
    CHANGE_ENV_CHOOSE_PART: 'ÈÄâÊã©ÈÉ®ÂàÜÂ≠óÊÆµÔºàÂ§öÈÄâÔºâ',
    // HARVEST_AUTO_LANG Â≠óÊÆµ
    HARVEST_AUTO_LANG_LABEL: 'ÁïåÈù¢/ÊèêÁ§∫ËØ≠Ë®ÄÔºàCN/ENÔºâ',
    HARVEST_AUTO_LANG_INVALID: 'ËØ∑ËæìÂÖ• CN Êàñ EN',
    //
    CHANGE_ENV_DONE: 'ËÆæÁΩÆ/‰øÆÊîπÂ∑≤ÂÆåÊàê„ÄÇ',
    CHANGE_ENV_DONE_EN: 'Configuration updated.',
    CHANGE_ENV_NOT_FOUND: 'ÈÖçÁΩÆÊñá‰ª∂‰∏çÂ≠òÂú®ÔºåËØ∑ÂÖàÊâßË°å‰ªªÊÑèÂ°´Êä•ÊàñÂàùÂßãÂåñ.',
    CHANGE_ENV_NOT_FOUND_EN:
      'Config file not found, please run any report or initialization first.',

    HOURS_RANGE_ERROR:
      'ÊòéÁªÜÊù°Êï∞‰∏éÊØèÊó•ÊÄªÂ∑•Êó∂„ÄÅÂçïÊù°Âå∫Èó¥‰∏çÁ¨¶ÔºåËØ∑ÂáèÂ∞ëÊù°Êï∞ÊàñË∞ÉÊï¥ËßÑÂàô„ÄÇ',
    HOURS_SAMPLING_ERROR: 'ÈááÊ†∑Ë∂ÖÂá∫ÈáçËØïÈôêÂà∂ÔºåËØ∑ÂáèÂ∞ëÊù°Êï∞ÊàñË∞ÉÊï¥Â∑•Êó∂ËÆæÁΩÆ„ÄÇ',
    PROJECT_NOT_MAPPED: (project) => `È°πÁõÆ[${project}]Êú™ÈÖçÁΩÆÊò†Â∞Ñ`,
    TASK_NOT_MAPPED: (task) => `‰ªªÂä°[${task}]Êú™ÈÖçÁΩÆÊò†Â∞Ñ`,
    // ÈÄöÁî®Ê†°È™å
    NOT_EMPTY_ERROR: '‰∏çËÉΩ‰∏∫Á©∫',
    NOT_EMPTY_ERROR_EN: 'Cannot be empty',
  },
  EN: {
    // --- Added: env change interactive prompts ---
    CHANGE_ENV_SELECT_FIELDS:
      'Select fields to change (multi-select is allowed):',
    CHANGE_ENV_SELECT_FIELDS_EN:
      'Select fields to change (multi-select is allowed):',
    CHANGE_ENV_FIELD_ALL: 'All fields (edit all one by one)',
    CHANGE_ENV_FIELD_ALL_EN: 'All fields (edit all one by one)',
    CHANGE_ENV_MUST_SELECT: 'Select at least one',
    CHANGE_ENV_MUST_SELECT_EN: 'Select at least one',
    CHANGE_ENV_DONE: 'Configuration updated.',
    CHANGE_ENV_DONE_EN: 'Configuration updated.',
    CHANGE_ENV_NOT_FOUND:
      'Config file not found, please run any report or initialization first.',
    CHANGE_ENV_NOT_FOUND_EN:
      'Config file not found, please run any report or initialization first.',
    ONLY_SELECT_ALL_OR_SUBSET:
      'Please select either "All fields" or a subset, not both at once',
    // for mode select
    CHANGE_ENV_CHOOSE_MODE:
      'Please choose whether to change all fields or just specific ones:',
    CHANGE_ENV_CHOOSE_ALL: 'All fields (edit all in order)',
    CHANGE_ENV_CHOOSE_PART: 'Select some fields (multi-select)',
    // HARVEST_AUTO_LANG field
    HARVEST_AUTO_LANG_LABEL: 'Interface/prompt language (CN/EN)',
    HARVEST_AUTO_LANG_INVALID: 'Please enter CN or EN',

    HARVEST_ACCOUNT_ID: 'Please input your Harvest account ID',
    HARVEST_TOKEN: 'Please input your Harvest API Token',
    USER_AGENT: 'Please input a custom identifier (e.g. your email)',
    PROJECT_MAP:
      'Input project-name to ID mapping (e.g. {"ProjectA":12345,"ProjectB":67890})',
    PROJECT_MAP_ERR: 'Must be valid JSON like {"ProjectA":12345}',
    TASK_MAP:
      'Input task-name to ID mapping (e.g. {"TaskA":11111,"TaskB":22222})',
    TASK_MAP_ERR: 'Must be valid JSON like {"TaskA":11111}',
    CONFIRM: (key, val) => `You entered ${key}:\n${val}\nIs this correct?`,
    ENV_SUCCESS: (userEnvPath) =>
      `Successfully created config file: ${userEnvPath}\nContinuing...\n`,
    ENV_PATCHED: '[EN] LANG field successfully added to config.\n',
    LANGUAGE_CHOICE: 'Please choose your preferred language:',
    SYSTEM_LANG_DETECTED: (osLocale) => `Detected system language: ${osLocale}`,
    CLI_DESC:
      'A CLI tool to import daily logs into Harvest. Requires .env or ~/.harvest-auto.env configuration.',
    FILE_PATH_ASK: 'Please enter the path to your daily report JSON file:',
    FILE_NOT_FOUND: (p) =>
      `File not found (after processing: ${p}), please check your input.`,
    FILE_PATH_CONFIRM: (p) =>
      `You set the daily JSON path as:\n${p}\nIs this correct?`,
    READ_FAIL: 'Failed to read/parse the daily report file:',
    NO_VALID_REPORT: 'No valid daily report content found',
    DRY_RUN: '[dry-run] No actual submission.',
    DRY_RUN_DESC: 'Dry run, only output results, no actual submission',
    CANCEL: 'Operation cancelled.',
    EXIT_MID:
      '‚ö†Ô∏è Detected that you cancelled the operation during interaction. Program exited. To continue, please re-run the command.',
    SUBMIT_FINISH:
      '\nüéâ All timesheets have been submitted successfully. Task completed!',
    LANG_ZH: 'ÁÆÄ‰Ωì‰∏≠Êñá (CN)',
    LANG_EN: 'English (EN)',
    IS_OK: 'Is this correct?',
    HELP_DESC: 'Display help information',
    SIGINT:
      '‚ö†Ô∏è Detected you used Ctrl+C to interrupt, program exited. Please re-run to continue.',
    // Â°´Êä•ÊµÅÁ®ã
    SUBMIT_OK: (date, project, task, hours, notes) =>
      `‚úî Submitted | ${date} | ${project} - ${task} | ${hours}h | ${notes}`,
    SUBMIT_FAIL: (date, project, task, hours, notes, err) =>
      `‚úó Failed | ${date} | ${project} - ${task} | ${hours}h | ${notes}\n${err}`,
    SUBMIT_PROGRESS: (date, project, task, hours) =>
      `Submitting: ${date} | ${project} - ${task} - ${hours}h ...`,
    WARNING_HOURS_ITEMS: (date, dayTotal, arrLen, max, isExceed) =>
      isExceed
        ? `‚ö†Ô∏è Warning: Unusual hour allocation at ${date} (total ${dayTotal}, items: ${arrLen}). Fallback: last entry exceeds max single-hour ${max}, please check item logic.\nIf strict limit needed, adjust this day manually.`
        : `‚ö†Ô∏è Warning: Unusual hour allocation at ${date} (total ${dayTotal}, items: ${arrLen}). Fallback used, distribution abnormal, please check this day.`,
    PROJECT_MAP_INVALID:
      '\n[Config Error] PROJECT_MAP is not valid JSON. Please edit ~/.harvest-auto.env as:\n\nPROJECT_MAP={"ProjectA":12345,"ProjectB":67890}\n',
    TASK_MAP_INVALID:
      '\n[Config Error] TASK_MAP is not valid JSON. Please edit ~/.harvest-auto.env as:\n\nTASK_MAP={"TaskA":11111,"TaskB":22222}\n',
    HOURS_RANGE_ERROR:
      'Detail count does not match total hours/interval, reduce item count or adjust rules.',
    HOURS_SAMPLING_ERROR:
      'Sampling exceeded retry limit, please reduce item count or adjust hour settings.',
    PROJECT_NOT_MAPPED: (project) => `Project [${project}] is not mapped.`,
    TASK_NOT_MAPPED: (task) => `Task [${task}] is not mapped.`,
    // ÈÄöÁî®Ê†°È™å
    NOT_EMPTY_ERROR: 'Cannot be empty',
    NOT_EMPTY_ERROR_EN: 'Cannot be empty',
  },
};

module.exports = {
  MSG,
};
